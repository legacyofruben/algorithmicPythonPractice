import time
import unittest

num = (
    "73167176531330624919225119674426574742355349194934"
    "96983520312774506326239578318016984801869478851843"
    "85861560789112949495459501737958331952853208805511"
    "12540698747158523863050715693290963295227443043557"
    "66896648950445244523161731856403098711121722383113"
    "62229893423380308135336276614282806444486645238749"
    "30358907296290491560440772390713810515859307960866"
    "70172427121883998797908792274921901699720888093776"
    "65727333001053367881220235421809751254540594752243"
    "52584907711670556013604839586446706324415722155397"
    "53697817977846174064955149290862569321978468622482"
    "83972241375657056057490261407972968652414535100474"
    "82166370484403199890008895243450658541227588666881"
    "16427171479924442928230863465674813919123162824586"
    "17866458359124566529476545682848912883142607690042"
    "24219022671055626321111109370544217506941658960408"
    "07198403850962455444362981230987879927244284909188"
    "84580156166097919133875499200524063689912560717606"
    "05886116467109405077541002256983155200055935729725"
    "71636269561882670428252483600823257530420752963450"
)


def product(part):
    prod = int(part[0])
    for d in range(1, len(part), 1):
        prod *= int(part[d])
    return prod


def solution(part):
    start_time = time.time()
    max_prod = 0
    # for l, r in zip(range(0, len(num), 1), range(part, len(num), 1)):
    #     max_prod = max(max_prod, product(num[l:r]))
    #     #print(f"max_prod: {max_prod}, product: {num[l:r]}")
    for l, r in zip(range(0, len(num)), range(part, len(num))):
        max_prod = max(max_prod, product(num[l:r]))
        if (r + 1) < len(num) and int(num[r + 1]) <= int(num[l]):
            l += 2
            r += 2
        else:
            l += 1
            r += 1
        #print(f"max_prod: {max_prod}, product: {num[l:r]}")
    end_time = time.time()
    print(f"Execution time: {end_time-start_time:.5f} sec")
    return max_prod


class Test(unittest.TestCase):
    def test_01(self):
        self.assertEqual(solution(4), 5832)

    def test_02(self):
        self.assertEqual(solution(13), 23514624000)

